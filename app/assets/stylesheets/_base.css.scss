body {
  font-family: 'Open Sans';
}

ul {
  -webkit-margin-before: 0em;
  -webkit-margin-after: 0em;
  -webkit-margin-start: 0px;
  -webkit-margin-end: 0px;
  -webkit-padding-start: 0px;
}


.control-label { display: none; }
.no-margin { margin-left: 0; margin-right: 0; }


@mixin diagonal-background-top($width, $height, $color) {
  position: relative;
  &::before {
      $w_int: $width/1px;
      $h_int: $height/1px;
      $v_pad: ($height / $width) * 100;
      // we must use rgb because the # in hex doesn't work in some browsers
      $rgb_color: 'rgb(#{red($color)}, #{green($color)}, #{blue($color)})';

      padding: #{$v_pad}% 0 0;
      background-position: 50%;
      background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="#{$w_int}" height="#{$h_int}"><polygon points="0,#{$h_int} #{$w_int},0 #{$w_int},#{$h_int}" style="fill:#{$rgb_color};stroke:#{$rgb_color};stroke-width:0"></polygon></svg>');
      background-repeat: no-repeat;
      background-size: cover;
      position: absolute;
      transform: rotate(180deg);
      width: 100%;
      height: 0;
      top: 0;
      content: '';
  }
}

@mixin diagonal-background-bottom($width, $height, $color) {
  position: relative;
  &::after {
      $w_int: $width/1px;
      $h_int: $height/1px;
      $v_pad: ($height / $width) * 100;
      // we must use rgb because the # in hex doesn't work in some browsers
      $rgb_color: 'rgb(#{red($color)}, #{green($color)}, #{blue($color)})';

      padding: #{$v_pad}% 0 0;
      background-position: 50%;
      background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="#{$w_int}" height="#{$h_int}"><polygon points="0,#{$h_int} #{$w_int},0 #{$w_int},#{$h_int}" style="fill:#{$rgb_color};stroke:#{$rgb_color};stroke-width:0"></polygon></svg>');
      background-repeat: no-repeat;
      background-size: cover;
      position: absolute;
      width: 100%;
      height: 0;
      bottom: 0;
      content: '';
  }
}

@mixin diagonal-background-top-2($width, $height, $color) {
  position: relative;
  &::before {
      $w_int: $width/1px;
      $h_int: $height/1px;
      $v_pad: ($height / $width) * 100;
      // we must use rgb because the # in hex doesn't work in some browsers
      $rgb_color: 'rgb(#{red($color)}, #{green($color)}, #{blue($color)})';

      padding: #{$v_pad}% 0 0;
      background-position: 50%;
      background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="#{$w_int}" height="#{$h_int}"><polygon points="0,#{$h_int} #{$w_int},0 #{$w_int},#{$h_int}" style="fill:#{$rgb_color};stroke:#{$rgb_color};stroke-width:0"></polygon></svg>');
      background-repeat: no-repeat;
      background-size: cover;
      position: absolute;
      transform: translateX(-50%) rotate(180deg);
      width: 100%;
      height: 0;
      top: -60px;
      content: '';
      opacity: 0.4;
  }
}

@mixin diagonal-background-bottom-2($width, $height, $color) {
  position: relative;
  &::after {
      $w_int: $width/1px;
      $h_int: $height/1px;
      $v_pad: ($height / $width) * 100;
      // we must use rgb because the # in hex doesn't work in some browsers
      $rgb_color: 'rgb(#{red($color)}, #{green($color)}, #{blue($color)})';

      padding: #{$v_pad}% 0 0;
      background-position: 50%;
      background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="#{$w_int}" height="#{$h_int}"><polygon points="0,#{$h_int} #{$w_int},0 #{$w_int},#{$h_int}" style="fill:#{$rgb_color};stroke:#{$rgb_color};stroke-width:0"></polygon></svg>');
      background-repeat: no-repeat;
      background-size: cover;
      position: absolute;
      transform: translateX(-50%);
      width: 100%;
      height: 0;
      bottom: -60px;
      content: '';
      opacity: 0.4;
  }
}

/**************************************************************
 FORMS
**************************************************************/

.section-contact,
.section-wish,
.section-thanks {

  .form-control {
    display: block;
    width: 100%;
    height: 40px;
    padding: 6px 10px;
    margin: 20px 0;
    font-size: 14px;
    text-transform: uppercase;
    line-height: 1.428571429;
    color: #fff;
    background-color: transparent;
    border: none;
    border-bottom: 1px solid #fff;
    border-radius: 0;

    -webkit-box-shadow: inset 0 0 0 rgba(0, 0, 0, 0.075);
    box-shadow: inset 0 0 0 rgba(0, 0, 0, 0.075);

    -webkit-transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
    -o-transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
    transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
  }

  .select-control {
    color: #333;
    border-bottom: none;
    background-color: rgba(255,255,255, 0.7);
    border-radius: none;
    -moz-border-radius: 0px;
    -webkit-border-radius: 0px;
    border-radius: 0px;
  }

  .text-control {
    height: 100%;
  }

  ::-webkit-input-placeholder { color: rgba(255,255,255, 0.5); }
  :-moz-placeholder { color: rgba(255,255,255, 0.5); }
  ::-moz-placeholder { color: rgba(255,255,255, 0.5); }
  :-ms-input-placeholder { color: rgba(255,255,255, 0.5); }

  .btn-contact,
  .btn-survey,
  .btn-wish,
  .btn-home {
    padding: 9px 60px;
    color: #fff;
    border-radius: 0;
    background-color: transparent;
    border-color: #fff;
    text-transform: uppercase;
    font-weight: 600;

    webkit-transition: all 0.4s ease;
    -moz-transition: all 0.4s ease;
    -o-transition: all 0.4s ease;
    transition: all 0.4s ease;

    &:hover {
      background-color: #fff;
      color: #333;
      border-color: #fff;
    }
  }
}

.video-wrapper {
  position: relative;
  padding-bottom: 48.25%; /* 16:9 */
  padding-top: 25px;
  height: 0;
}

.video-wrapper iframe {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}